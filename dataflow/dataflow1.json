{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_campaign",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_asdb2",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "ls_dls",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Column_1 as string,",
				"          Column_2 as string,",
				"          Column_3 as string,",
				"          Column_4 as string,",
				"          Column_5 as double,",
				"          Column_6 as double,",
				"          Column_7 as string,",
				"          Column_8 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          region as string,",
				"          country as string,",
				"          productCategory as string,",
				"          campaignName as string,",
				"          revenue as decimal(10,2),",
				"          revenueTarget as decimal(10,2),",
				"          city as string,",
				"          Stat as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          region = Column_1,",
				"          country = Column_2,",
				"          productCategory = Column_3,",
				"          campaignName = Column_4,",
				"          revenue = Column_5,",
				"          revenueTarget = Column_6,",
				"          city = Column_7,",
				"          Stat = Column_8",
				"     )) ~> sink1"
			]
		}
	}
}